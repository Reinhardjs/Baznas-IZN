package com.karyastudio.izn.dao.generateSchema;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "KDZ".
*/
public class KDZDao extends AbstractDao<KDZ, String> {

    public static final String TABLENAME = "KDZ";

    /**
     * Properties of entity KDZ.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property CountKeluarga = new Property(0, String.class, "countKeluarga", false, "COUNT_KELUARGA");
        public final static Property Status = new Property(1, String.class, "status", false, "STATUS");
        public final static Property Request_type = new Property(2, String.class, "request_type", false, "REQUEST_TYPE");
        public final static Property Fk_id = new Property(3, String.class, "fk_id", true, "FK_ID");
        public final static Property UID = new Property(4, String.class, "UID", false, "UID");
        public final static Property M1_created_at = new Property(5, String.class, "M1_created_at", false, "M1_CREATED_AT");
        public final static Property M1_updated_at = new Property(6, String.class, "M1_updated_at", false, "M1_UPDATED_AT");
        public final static Property M1_nama = new Property(7, String.class, "M1_nama", false, "M1_NAMA");
        public final static Property M1_101 = new Property(8, String.class, "M1_101", false, "M1_101");
        public final static Property M1_102 = new Property(9, String.class, "M1_102", false, "M1_102");
        public final static Property M1_103 = new Property(10, String.class, "M1_103", false, "M1_103");
        public final static Property M1_104 = new Property(11, String.class, "M1_104", false, "M1_104");
        public final static Property M1_105 = new Property(12, String.class, "M1_105", false, "M1_105");
        public final static Property M1_106 = new Property(13, String.class, "M1_106", false, "M1_106");
        public final static Property M1_107 = new Property(14, String.class, "M1_107", false, "M1_107");
        public final static Property M1_108 = new Property(15, String.class, "M1_108", false, "M1_108");
        public final static Property M1_109 = new Property(16, String.class, "M1_109", false, "M1_109");
        public final static Property M1_110 = new Property(17, String.class, "M1_110", false, "M1_110");
        public final static Property M1_401 = new Property(18, String.class, "M1_401", false, "M1_401");
        public final static Property M1_402 = new Property(19, String.class, "M1_402", false, "M1_402");
        public final static Property M1_403 = new Property(20, String.class, "M1_403", false, "M1_403");
        public final static Property M1_404 = new Property(21, String.class, "M1_404", false, "M1_404");
        public final static Property M1_405 = new Property(22, String.class, "M1_405", false, "M1_405");
        public final static Property M1_406 = new Property(23, String.class, "M1_406", false, "M1_406");
        public final static Property M1_407 = new Property(24, String.class, "M1_407", false, "M1_407");
        public final static Property M1_501 = new Property(25, String.class, "M1_501", false, "M1_501");
        public final static Property M1_502 = new Property(26, String.class, "M1_502", false, "M1_502");
        public final static Property M1_503 = new Property(27, String.class, "M1_503", false, "M1_503");
        public final static Property M1_504 = new Property(28, String.class, "M1_504", false, "M1_504");
        public final static Property M1_505 = new Property(29, String.class, "M1_505", false, "M1_505");
        public final static Property M1_506 = new Property(30, String.class, "M1_506", false, "M1_506");
        public final static Property M1_507 = new Property(31, String.class, "M1_507", false, "M1_507");
        public final static Property M1_508 = new Property(32, String.class, "M1_508", false, "M1_508");
        public final static Property M1_509 = new Property(33, String.class, "M1_509", false, "M1_509");
        public final static Property M1_510 = new Property(34, String.class, "M1_510", false, "M1_510");
        public final static Property M1_601 = new Property(35, String.class, "M1_601", false, "M1_601");
        public final static Property M1_601_kode = new Property(36, String.class, "M1_601_kode", false, "M1_601_KODE");
        public final static Property M1_602_kode = new Property(37, String.class, "M1_602_kode", false, "M1_602_KODE");
        public final static Property M1_603_kode = new Property(38, String.class, "M1_603_kode", false, "M1_603_KODE");
        public final static Property M1_602 = new Property(39, String.class, "M1_602", false, "M1_602");
        public final static Property M1_603 = new Property(40, String.class, "M1_603", false, "M1_603");
        public final static Property M1_604 = new Property(41, String.class, "M1_604", false, "M1_604");
        public final static Property M1_605 = new Property(42, String.class, "M1_605", false, "M1_605");
        public final static Property M1_606 = new Property(43, String.class, "M1_606", false, "M1_606");
        public final static Property M1_607 = new Property(44, String.class, "M1_607", false, "M1_607");
        public final static Property M1_608 = new Property(45, String.class, "M1_608", false, "M1_608");
        public final static Property M1_609 = new Property(46, String.class, "M1_609", false, "M1_609");
        public final static Property M1_610 = new Property(47, String.class, "M1_610", false, "M1_610");
        public final static Property M1_611 = new Property(48, String.class, "M1_611", false, "M1_611");
        public final static Property M1_612 = new Property(49, String.class, "M1_612", false, "M1_612");
        public final static Property M1_613 = new Property(50, String.class, "M1_613", false, "M1_613");
        public final static Property M1_614 = new Property(51, String.class, "M1_614", false, "M1_614");
        public final static Property M1_615 = new Property(52, String.class, "M1_615", false, "M1_615");
        public final static Property M1_616 = new Property(53, String.class, "M1_616", false, "M1_616");
        public final static Property M1_617 = new Property(54, String.class, "M1_617", false, "M1_617");
        public final static Property M1_618 = new Property(55, String.class, "M1_618", false, "M1_618");
        public final static Property M1_701 = new Property(56, String.class, "M1_701", false, "M1_701");
        public final static Property M1_702 = new Property(57, String.class, "M1_702", false, "M1_702");
        public final static Property M1_703 = new Property(58, String.class, "M1_703", false, "M1_703");
        public final static Property M1_801 = new Property(59, String.class, "M1_801", false, "M1_801");
        public final static Property M1_802 = new Property(60, String.class, "M1_802", false, "M1_802");
        public final static Property M1_803 = new Property(61, String.class, "M1_803", false, "M1_803");
        public final static Property M1_804 = new Property(62, String.class, "M1_804", false, "M1_804");
        public final static Property M1_805 = new Property(63, String.class, "M1_805", false, "M1_805");
        public final static Property M1_806 = new Property(64, String.class, "M1_806", false, "M1_806");
        public final static Property M1_807 = new Property(65, String.class, "M1_807", false, "M1_807");
        public final static Property M1_808 = new Property(66, String.class, "M1_808", false, "M1_808");
        public final static Property M1_809 = new Property(67, String.class, "M1_809", false, "M1_809");
        public final static Property M1_810 = new Property(68, String.class, "M1_810", false, "M1_810");
        public final static Property M1_811 = new Property(69, String.class, "M1_811", false, "M1_811");
        public final static Property M1_812 = new Property(70, String.class, "M1_812", false, "M1_812");
        public final static Property M1_813 = new Property(71, String.class, "M1_813", false, "M1_813");
        public final static Property M1_814 = new Property(72, String.class, "M1_814", false, "M1_814");
        public final static Property M1_815 = new Property(73, String.class, "M1_815", false, "M1_815");
        public final static Property M1_lik1 = new Property(74, String.class, "M1_lik1", false, "M1_LIK1");
        public final static Property M1_lik2 = new Property(75, String.class, "M1_lik2", false, "M1_LIK2");
        public final static Property M1_lik3 = new Property(76, String.class, "M1_lik3", false, "M1_LIK3");
        public final static Property M1_lik4 = new Property(77, String.class, "M1_lik4", false, "M1_LIK4");
        public final static Property M1_lik5 = new Property(78, String.class, "M1_lik5", false, "M1_LIK5");
        public final static Property M1_lik1B = new Property(79, String.class, "M1_lik1B", false, "M1_LIK1_B");
        public final static Property M1_lik2B = new Property(80, String.class, "M1_lik2B", false, "M1_LIK2_B");
        public final static Property M1_lik3B = new Property(81, String.class, "M1_lik3B", false, "M1_LIK3_B");
        public final static Property M1_lik4B = new Property(82, String.class, "M1_lik4B", false, "M1_LIK4_B");
        public final static Property M1_lik5B = new Property(83, String.class, "M1_lik5B", false, "M1_LIK5_B");
    }


    public KDZDao(DaoConfig config) {
        super(config);
    }
    
    public KDZDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"KDZ\" (" + //
                "\"COUNT_KELUARGA\" TEXT NOT NULL ," + // 0: countKeluarga
                "\"STATUS\" TEXT NOT NULL ," + // 1: status
                "\"REQUEST_TYPE\" TEXT NOT NULL ," + // 2: request_type
                "\"FK_ID\" TEXT PRIMARY KEY NOT NULL ," + // 3: fk_id
                "\"UID\" TEXT NOT NULL ," + // 4: UID
                "\"M1_CREATED_AT\" TEXT NOT NULL ," + // 5: M1_created_at
                "\"M1_UPDATED_AT\" TEXT NOT NULL ," + // 6: M1_updated_at
                "\"M1_NAMA\" TEXT NOT NULL ," + // 7: M1_nama
                "\"M1_101\" TEXT NOT NULL ," + // 8: M1_101
                "\"M1_102\" TEXT NOT NULL ," + // 9: M1_102
                "\"M1_103\" TEXT NOT NULL ," + // 10: M1_103
                "\"M1_104\" TEXT NOT NULL ," + // 11: M1_104
                "\"M1_105\" TEXT NOT NULL ," + // 12: M1_105
                "\"M1_106\" TEXT NOT NULL ," + // 13: M1_106
                "\"M1_107\" TEXT NOT NULL ," + // 14: M1_107
                "\"M1_108\" TEXT NOT NULL ," + // 15: M1_108
                "\"M1_109\" TEXT NOT NULL ," + // 16: M1_109
                "\"M1_110\" TEXT NOT NULL ," + // 17: M1_110
                "\"M1_401\" TEXT NOT NULL ," + // 18: M1_401
                "\"M1_402\" TEXT NOT NULL ," + // 19: M1_402
                "\"M1_403\" TEXT NOT NULL ," + // 20: M1_403
                "\"M1_404\" TEXT NOT NULL ," + // 21: M1_404
                "\"M1_405\" TEXT NOT NULL ," + // 22: M1_405
                "\"M1_406\" TEXT NOT NULL ," + // 23: M1_406
                "\"M1_407\" TEXT NOT NULL ," + // 24: M1_407
                "\"M1_501\" TEXT NOT NULL ," + // 25: M1_501
                "\"M1_502\" TEXT NOT NULL ," + // 26: M1_502
                "\"M1_503\" TEXT NOT NULL ," + // 27: M1_503
                "\"M1_504\" TEXT NOT NULL ," + // 28: M1_504
                "\"M1_505\" TEXT NOT NULL ," + // 29: M1_505
                "\"M1_506\" TEXT NOT NULL ," + // 30: M1_506
                "\"M1_507\" TEXT NOT NULL ," + // 31: M1_507
                "\"M1_508\" TEXT NOT NULL ," + // 32: M1_508
                "\"M1_509\" TEXT NOT NULL ," + // 33: M1_509
                "\"M1_510\" TEXT NOT NULL ," + // 34: M1_510
                "\"M1_601\" TEXT NOT NULL ," + // 35: M1_601
                "\"M1_601_KODE\" TEXT NOT NULL ," + // 36: M1_601_kode
                "\"M1_602_KODE\" TEXT NOT NULL ," + // 37: M1_602_kode
                "\"M1_603_KODE\" TEXT NOT NULL ," + // 38: M1_603_kode
                "\"M1_602\" TEXT NOT NULL ," + // 39: M1_602
                "\"M1_603\" TEXT NOT NULL ," + // 40: M1_603
                "\"M1_604\" TEXT NOT NULL ," + // 41: M1_604
                "\"M1_605\" TEXT NOT NULL ," + // 42: M1_605
                "\"M1_606\" TEXT NOT NULL ," + // 43: M1_606
                "\"M1_607\" TEXT NOT NULL ," + // 44: M1_607
                "\"M1_608\" TEXT NOT NULL ," + // 45: M1_608
                "\"M1_609\" TEXT NOT NULL ," + // 46: M1_609
                "\"M1_610\" TEXT NOT NULL ," + // 47: M1_610
                "\"M1_611\" TEXT NOT NULL ," + // 48: M1_611
                "\"M1_612\" TEXT NOT NULL ," + // 49: M1_612
                "\"M1_613\" TEXT NOT NULL ," + // 50: M1_613
                "\"M1_614\" TEXT NOT NULL ," + // 51: M1_614
                "\"M1_615\" TEXT NOT NULL ," + // 52: M1_615
                "\"M1_616\" TEXT NOT NULL ," + // 53: M1_616
                "\"M1_617\" TEXT NOT NULL ," + // 54: M1_617
                "\"M1_618\" TEXT NOT NULL ," + // 55: M1_618
                "\"M1_701\" TEXT NOT NULL ," + // 56: M1_701
                "\"M1_702\" TEXT NOT NULL ," + // 57: M1_702
                "\"M1_703\" TEXT NOT NULL ," + // 58: M1_703
                "\"M1_801\" TEXT NOT NULL ," + // 59: M1_801
                "\"M1_802\" TEXT NOT NULL ," + // 60: M1_802
                "\"M1_803\" TEXT NOT NULL ," + // 61: M1_803
                "\"M1_804\" TEXT NOT NULL ," + // 62: M1_804
                "\"M1_805\" TEXT NOT NULL ," + // 63: M1_805
                "\"M1_806\" TEXT NOT NULL ," + // 64: M1_806
                "\"M1_807\" TEXT NOT NULL ," + // 65: M1_807
                "\"M1_808\" TEXT NOT NULL ," + // 66: M1_808
                "\"M1_809\" TEXT NOT NULL ," + // 67: M1_809
                "\"M1_810\" TEXT NOT NULL ," + // 68: M1_810
                "\"M1_811\" TEXT NOT NULL ," + // 69: M1_811
                "\"M1_812\" TEXT NOT NULL ," + // 70: M1_812
                "\"M1_813\" TEXT NOT NULL ," + // 71: M1_813
                "\"M1_814\" TEXT NOT NULL ," + // 72: M1_814
                "\"M1_815\" TEXT NOT NULL ," + // 73: M1_815
                "\"M1_LIK1\" TEXT NOT NULL ," + // 74: M1_lik1
                "\"M1_LIK2\" TEXT NOT NULL ," + // 75: M1_lik2
                "\"M1_LIK3\" TEXT NOT NULL ," + // 76: M1_lik3
                "\"M1_LIK4\" TEXT NOT NULL ," + // 77: M1_lik4
                "\"M1_LIK5\" TEXT NOT NULL ," + // 78: M1_lik5
                "\"M1_LIK1_B\" TEXT NOT NULL ," + // 79: M1_lik1B
                "\"M1_LIK2_B\" TEXT NOT NULL ," + // 80: M1_lik2B
                "\"M1_LIK3_B\" TEXT NOT NULL ," + // 81: M1_lik3B
                "\"M1_LIK4_B\" TEXT NOT NULL ," + // 82: M1_lik4B
                "\"M1_LIK5_B\" TEXT NOT NULL );"); // 83: M1_lik5B
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"KDZ\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, KDZ entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getCountKeluarga());
        stmt.bindString(2, entity.getStatus());
        stmt.bindString(3, entity.getRequest_type());
        stmt.bindString(4, entity.getFk_id());
        stmt.bindString(5, entity.getUID());
        stmt.bindString(6, entity.getM1_created_at());
        stmt.bindString(7, entity.getM1_updated_at());
        stmt.bindString(8, entity.getM1_nama());
        stmt.bindString(9, entity.getM1_101());
        stmt.bindString(10, entity.getM1_102());
        stmt.bindString(11, entity.getM1_103());
        stmt.bindString(12, entity.getM1_104());
        stmt.bindString(13, entity.getM1_105());
        stmt.bindString(14, entity.getM1_106());
        stmt.bindString(15, entity.getM1_107());
        stmt.bindString(16, entity.getM1_108());
        stmt.bindString(17, entity.getM1_109());
        stmt.bindString(18, entity.getM1_110());
        stmt.bindString(19, entity.getM1_401());
        stmt.bindString(20, entity.getM1_402());
        stmt.bindString(21, entity.getM1_403());
        stmt.bindString(22, entity.getM1_404());
        stmt.bindString(23, entity.getM1_405());
        stmt.bindString(24, entity.getM1_406());
        stmt.bindString(25, entity.getM1_407());
        stmt.bindString(26, entity.getM1_501());
        stmt.bindString(27, entity.getM1_502());
        stmt.bindString(28, entity.getM1_503());
        stmt.bindString(29, entity.getM1_504());
        stmt.bindString(30, entity.getM1_505());
        stmt.bindString(31, entity.getM1_506());
        stmt.bindString(32, entity.getM1_507());
        stmt.bindString(33, entity.getM1_508());
        stmt.bindString(34, entity.getM1_509());
        stmt.bindString(35, entity.getM1_510());
        stmt.bindString(36, entity.getM1_601());
        stmt.bindString(37, entity.getM1_601_kode());
        stmt.bindString(38, entity.getM1_602_kode());
        stmt.bindString(39, entity.getM1_603_kode());
        stmt.bindString(40, entity.getM1_602());
        stmt.bindString(41, entity.getM1_603());
        stmt.bindString(42, entity.getM1_604());
        stmt.bindString(43, entity.getM1_605());
        stmt.bindString(44, entity.getM1_606());
        stmt.bindString(45, entity.getM1_607());
        stmt.bindString(46, entity.getM1_608());
        stmt.bindString(47, entity.getM1_609());
        stmt.bindString(48, entity.getM1_610());
        stmt.bindString(49, entity.getM1_611());
        stmt.bindString(50, entity.getM1_612());
        stmt.bindString(51, entity.getM1_613());
        stmt.bindString(52, entity.getM1_614());
        stmt.bindString(53, entity.getM1_615());
        stmt.bindString(54, entity.getM1_616());
        stmt.bindString(55, entity.getM1_617());
        stmt.bindString(56, entity.getM1_618());
        stmt.bindString(57, entity.getM1_701());
        stmt.bindString(58, entity.getM1_702());
        stmt.bindString(59, entity.getM1_703());
        stmt.bindString(60, entity.getM1_801());
        stmt.bindString(61, entity.getM1_802());
        stmt.bindString(62, entity.getM1_803());
        stmt.bindString(63, entity.getM1_804());
        stmt.bindString(64, entity.getM1_805());
        stmt.bindString(65, entity.getM1_806());
        stmt.bindString(66, entity.getM1_807());
        stmt.bindString(67, entity.getM1_808());
        stmt.bindString(68, entity.getM1_809());
        stmt.bindString(69, entity.getM1_810());
        stmt.bindString(70, entity.getM1_811());
        stmt.bindString(71, entity.getM1_812());
        stmt.bindString(72, entity.getM1_813());
        stmt.bindString(73, entity.getM1_814());
        stmt.bindString(74, entity.getM1_815());
        stmt.bindString(75, entity.getM1_lik1());
        stmt.bindString(76, entity.getM1_lik2());
        stmt.bindString(77, entity.getM1_lik3());
        stmt.bindString(78, entity.getM1_lik4());
        stmt.bindString(79, entity.getM1_lik5());
        stmt.bindString(80, entity.getM1_lik1B());
        stmt.bindString(81, entity.getM1_lik2B());
        stmt.bindString(82, entity.getM1_lik3B());
        stmt.bindString(83, entity.getM1_lik4B());
        stmt.bindString(84, entity.getM1_lik5B());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, KDZ entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getCountKeluarga());
        stmt.bindString(2, entity.getStatus());
        stmt.bindString(3, entity.getRequest_type());
        stmt.bindString(4, entity.getFk_id());
        stmt.bindString(5, entity.getUID());
        stmt.bindString(6, entity.getM1_created_at());
        stmt.bindString(7, entity.getM1_updated_at());
        stmt.bindString(8, entity.getM1_nama());
        stmt.bindString(9, entity.getM1_101());
        stmt.bindString(10, entity.getM1_102());
        stmt.bindString(11, entity.getM1_103());
        stmt.bindString(12, entity.getM1_104());
        stmt.bindString(13, entity.getM1_105());
        stmt.bindString(14, entity.getM1_106());
        stmt.bindString(15, entity.getM1_107());
        stmt.bindString(16, entity.getM1_108());
        stmt.bindString(17, entity.getM1_109());
        stmt.bindString(18, entity.getM1_110());
        stmt.bindString(19, entity.getM1_401());
        stmt.bindString(20, entity.getM1_402());
        stmt.bindString(21, entity.getM1_403());
        stmt.bindString(22, entity.getM1_404());
        stmt.bindString(23, entity.getM1_405());
        stmt.bindString(24, entity.getM1_406());
        stmt.bindString(25, entity.getM1_407());
        stmt.bindString(26, entity.getM1_501());
        stmt.bindString(27, entity.getM1_502());
        stmt.bindString(28, entity.getM1_503());
        stmt.bindString(29, entity.getM1_504());
        stmt.bindString(30, entity.getM1_505());
        stmt.bindString(31, entity.getM1_506());
        stmt.bindString(32, entity.getM1_507());
        stmt.bindString(33, entity.getM1_508());
        stmt.bindString(34, entity.getM1_509());
        stmt.bindString(35, entity.getM1_510());
        stmt.bindString(36, entity.getM1_601());
        stmt.bindString(37, entity.getM1_601_kode());
        stmt.bindString(38, entity.getM1_602_kode());
        stmt.bindString(39, entity.getM1_603_kode());
        stmt.bindString(40, entity.getM1_602());
        stmt.bindString(41, entity.getM1_603());
        stmt.bindString(42, entity.getM1_604());
        stmt.bindString(43, entity.getM1_605());
        stmt.bindString(44, entity.getM1_606());
        stmt.bindString(45, entity.getM1_607());
        stmt.bindString(46, entity.getM1_608());
        stmt.bindString(47, entity.getM1_609());
        stmt.bindString(48, entity.getM1_610());
        stmt.bindString(49, entity.getM1_611());
        stmt.bindString(50, entity.getM1_612());
        stmt.bindString(51, entity.getM1_613());
        stmt.bindString(52, entity.getM1_614());
        stmt.bindString(53, entity.getM1_615());
        stmt.bindString(54, entity.getM1_616());
        stmt.bindString(55, entity.getM1_617());
        stmt.bindString(56, entity.getM1_618());
        stmt.bindString(57, entity.getM1_701());
        stmt.bindString(58, entity.getM1_702());
        stmt.bindString(59, entity.getM1_703());
        stmt.bindString(60, entity.getM1_801());
        stmt.bindString(61, entity.getM1_802());
        stmt.bindString(62, entity.getM1_803());
        stmt.bindString(63, entity.getM1_804());
        stmt.bindString(64, entity.getM1_805());
        stmt.bindString(65, entity.getM1_806());
        stmt.bindString(66, entity.getM1_807());
        stmt.bindString(67, entity.getM1_808());
        stmt.bindString(68, entity.getM1_809());
        stmt.bindString(69, entity.getM1_810());
        stmt.bindString(70, entity.getM1_811());
        stmt.bindString(71, entity.getM1_812());
        stmt.bindString(72, entity.getM1_813());
        stmt.bindString(73, entity.getM1_814());
        stmt.bindString(74, entity.getM1_815());
        stmt.bindString(75, entity.getM1_lik1());
        stmt.bindString(76, entity.getM1_lik2());
        stmt.bindString(77, entity.getM1_lik3());
        stmt.bindString(78, entity.getM1_lik4());
        stmt.bindString(79, entity.getM1_lik5());
        stmt.bindString(80, entity.getM1_lik1B());
        stmt.bindString(81, entity.getM1_lik2B());
        stmt.bindString(82, entity.getM1_lik3B());
        stmt.bindString(83, entity.getM1_lik4B());
        stmt.bindString(84, entity.getM1_lik5B());
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 3);
    }    

    @Override
    public KDZ readEntity(Cursor cursor, int offset) {
        KDZ entity = new KDZ( //
            cursor.getString(offset + 0), // countKeluarga
            cursor.getString(offset + 1), // status
            cursor.getString(offset + 2), // request_type
            cursor.getString(offset + 3), // fk_id
            cursor.getString(offset + 4), // UID
            cursor.getString(offset + 5), // M1_created_at
            cursor.getString(offset + 6), // M1_updated_at
            cursor.getString(offset + 7), // M1_nama
            cursor.getString(offset + 8), // M1_101
            cursor.getString(offset + 9), // M1_102
            cursor.getString(offset + 10), // M1_103
            cursor.getString(offset + 11), // M1_104
            cursor.getString(offset + 12), // M1_105
            cursor.getString(offset + 13), // M1_106
            cursor.getString(offset + 14), // M1_107
            cursor.getString(offset + 15), // M1_108
            cursor.getString(offset + 16), // M1_109
            cursor.getString(offset + 17), // M1_110
            cursor.getString(offset + 18), // M1_401
            cursor.getString(offset + 19), // M1_402
            cursor.getString(offset + 20), // M1_403
            cursor.getString(offset + 21), // M1_404
            cursor.getString(offset + 22), // M1_405
            cursor.getString(offset + 23), // M1_406
            cursor.getString(offset + 24), // M1_407
            cursor.getString(offset + 25), // M1_501
            cursor.getString(offset + 26), // M1_502
            cursor.getString(offset + 27), // M1_503
            cursor.getString(offset + 28), // M1_504
            cursor.getString(offset + 29), // M1_505
            cursor.getString(offset + 30), // M1_506
            cursor.getString(offset + 31), // M1_507
            cursor.getString(offset + 32), // M1_508
            cursor.getString(offset + 33), // M1_509
            cursor.getString(offset + 34), // M1_510
            cursor.getString(offset + 35), // M1_601
            cursor.getString(offset + 36), // M1_601_kode
            cursor.getString(offset + 37), // M1_602_kode
            cursor.getString(offset + 38), // M1_603_kode
            cursor.getString(offset + 39), // M1_602
            cursor.getString(offset + 40), // M1_603
            cursor.getString(offset + 41), // M1_604
            cursor.getString(offset + 42), // M1_605
            cursor.getString(offset + 43), // M1_606
            cursor.getString(offset + 44), // M1_607
            cursor.getString(offset + 45), // M1_608
            cursor.getString(offset + 46), // M1_609
            cursor.getString(offset + 47), // M1_610
            cursor.getString(offset + 48), // M1_611
            cursor.getString(offset + 49), // M1_612
            cursor.getString(offset + 50), // M1_613
            cursor.getString(offset + 51), // M1_614
            cursor.getString(offset + 52), // M1_615
            cursor.getString(offset + 53), // M1_616
            cursor.getString(offset + 54), // M1_617
            cursor.getString(offset + 55), // M1_618
            cursor.getString(offset + 56), // M1_701
            cursor.getString(offset + 57), // M1_702
            cursor.getString(offset + 58), // M1_703
            cursor.getString(offset + 59), // M1_801
            cursor.getString(offset + 60), // M1_802
            cursor.getString(offset + 61), // M1_803
            cursor.getString(offset + 62), // M1_804
            cursor.getString(offset + 63), // M1_805
            cursor.getString(offset + 64), // M1_806
            cursor.getString(offset + 65), // M1_807
            cursor.getString(offset + 66), // M1_808
            cursor.getString(offset + 67), // M1_809
            cursor.getString(offset + 68), // M1_810
            cursor.getString(offset + 69), // M1_811
            cursor.getString(offset + 70), // M1_812
            cursor.getString(offset + 71), // M1_813
            cursor.getString(offset + 72), // M1_814
            cursor.getString(offset + 73), // M1_815
            cursor.getString(offset + 74), // M1_lik1
            cursor.getString(offset + 75), // M1_lik2
            cursor.getString(offset + 76), // M1_lik3
            cursor.getString(offset + 77), // M1_lik4
            cursor.getString(offset + 78), // M1_lik5
            cursor.getString(offset + 79), // M1_lik1B
            cursor.getString(offset + 80), // M1_lik2B
            cursor.getString(offset + 81), // M1_lik3B
            cursor.getString(offset + 82), // M1_lik4B
            cursor.getString(offset + 83) // M1_lik5B
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, KDZ entity, int offset) {
        entity.setCountKeluarga(cursor.getString(offset + 0));
        entity.setStatus(cursor.getString(offset + 1));
        entity.setRequest_type(cursor.getString(offset + 2));
        entity.setFk_id(cursor.getString(offset + 3));
        entity.setUID(cursor.getString(offset + 4));
        entity.setM1_created_at(cursor.getString(offset + 5));
        entity.setM1_updated_at(cursor.getString(offset + 6));
        entity.setM1_nama(cursor.getString(offset + 7));
        entity.setM1_101(cursor.getString(offset + 8));
        entity.setM1_102(cursor.getString(offset + 9));
        entity.setM1_103(cursor.getString(offset + 10));
        entity.setM1_104(cursor.getString(offset + 11));
        entity.setM1_105(cursor.getString(offset + 12));
        entity.setM1_106(cursor.getString(offset + 13));
        entity.setM1_107(cursor.getString(offset + 14));
        entity.setM1_108(cursor.getString(offset + 15));
        entity.setM1_109(cursor.getString(offset + 16));
        entity.setM1_110(cursor.getString(offset + 17));
        entity.setM1_401(cursor.getString(offset + 18));
        entity.setM1_402(cursor.getString(offset + 19));
        entity.setM1_403(cursor.getString(offset + 20));
        entity.setM1_404(cursor.getString(offset + 21));
        entity.setM1_405(cursor.getString(offset + 22));
        entity.setM1_406(cursor.getString(offset + 23));
        entity.setM1_407(cursor.getString(offset + 24));
        entity.setM1_501(cursor.getString(offset + 25));
        entity.setM1_502(cursor.getString(offset + 26));
        entity.setM1_503(cursor.getString(offset + 27));
        entity.setM1_504(cursor.getString(offset + 28));
        entity.setM1_505(cursor.getString(offset + 29));
        entity.setM1_506(cursor.getString(offset + 30));
        entity.setM1_507(cursor.getString(offset + 31));
        entity.setM1_508(cursor.getString(offset + 32));
        entity.setM1_509(cursor.getString(offset + 33));
        entity.setM1_510(cursor.getString(offset + 34));
        entity.setM1_601(cursor.getString(offset + 35));
        entity.setM1_601_kode(cursor.getString(offset + 36));
        entity.setM1_602_kode(cursor.getString(offset + 37));
        entity.setM1_603_kode(cursor.getString(offset + 38));
        entity.setM1_602(cursor.getString(offset + 39));
        entity.setM1_603(cursor.getString(offset + 40));
        entity.setM1_604(cursor.getString(offset + 41));
        entity.setM1_605(cursor.getString(offset + 42));
        entity.setM1_606(cursor.getString(offset + 43));
        entity.setM1_607(cursor.getString(offset + 44));
        entity.setM1_608(cursor.getString(offset + 45));
        entity.setM1_609(cursor.getString(offset + 46));
        entity.setM1_610(cursor.getString(offset + 47));
        entity.setM1_611(cursor.getString(offset + 48));
        entity.setM1_612(cursor.getString(offset + 49));
        entity.setM1_613(cursor.getString(offset + 50));
        entity.setM1_614(cursor.getString(offset + 51));
        entity.setM1_615(cursor.getString(offset + 52));
        entity.setM1_616(cursor.getString(offset + 53));
        entity.setM1_617(cursor.getString(offset + 54));
        entity.setM1_618(cursor.getString(offset + 55));
        entity.setM1_701(cursor.getString(offset + 56));
        entity.setM1_702(cursor.getString(offset + 57));
        entity.setM1_703(cursor.getString(offset + 58));
        entity.setM1_801(cursor.getString(offset + 59));
        entity.setM1_802(cursor.getString(offset + 60));
        entity.setM1_803(cursor.getString(offset + 61));
        entity.setM1_804(cursor.getString(offset + 62));
        entity.setM1_805(cursor.getString(offset + 63));
        entity.setM1_806(cursor.getString(offset + 64));
        entity.setM1_807(cursor.getString(offset + 65));
        entity.setM1_808(cursor.getString(offset + 66));
        entity.setM1_809(cursor.getString(offset + 67));
        entity.setM1_810(cursor.getString(offset + 68));
        entity.setM1_811(cursor.getString(offset + 69));
        entity.setM1_812(cursor.getString(offset + 70));
        entity.setM1_813(cursor.getString(offset + 71));
        entity.setM1_814(cursor.getString(offset + 72));
        entity.setM1_815(cursor.getString(offset + 73));
        entity.setM1_lik1(cursor.getString(offset + 74));
        entity.setM1_lik2(cursor.getString(offset + 75));
        entity.setM1_lik3(cursor.getString(offset + 76));
        entity.setM1_lik4(cursor.getString(offset + 77));
        entity.setM1_lik5(cursor.getString(offset + 78));
        entity.setM1_lik1B(cursor.getString(offset + 79));
        entity.setM1_lik2B(cursor.getString(offset + 80));
        entity.setM1_lik3B(cursor.getString(offset + 81));
        entity.setM1_lik4B(cursor.getString(offset + 82));
        entity.setM1_lik5B(cursor.getString(offset + 83));
     }
    
    @Override
    protected final String updateKeyAfterInsert(KDZ entity, long rowId) {
        return entity.getFk_id();
    }
    
    @Override
    public String getKey(KDZ entity) {
        if(entity != null) {
            return entity.getFk_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(KDZ entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
